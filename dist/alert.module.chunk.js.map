{"version":3,"sources":["./src/app/pages/component/alert/alert.component.html","./src/app/pages/component/alert/alert.component.ts","./src/app/pages/component/alert/alert.module.ts"],"names":[],"mappings":";;;;;AAAA,4yBAA4yB,iBAAiB,yzBAAyzB,kBAAkB,8M;;;;;;;;;;;;;;;;;;;;;ACA/kD;AACpB;AACG;AAOxC;IAME;QALA,kCAAkC;QAE3B,WAAM,GAAkB,EAAE,CAAC;QAgClC,0BAA0B;QAC1B,qCAAqC;QAC7B,aAAQ,GAAG,IAAI,6DAAO,EAAU,CAAC;QAEzC,sBAAiB,GAAG,KAAK,CAAC;QAhCxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,0BAA0B;SACpC,EAAE;YACD,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,uBAAuB;SACjC,EAAE;YACD,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,SAAS;YACf,OAAO,EAAE,yBAAyB;SACnC,EAAE;YACD,EAAE,EAAE,CAAC;YACL,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,wBAAwB;SAClC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAa,IAAK,aAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAxB,CAAwB,CAAC,CAAC;IAC7E,CAAC;IAEM,mCAAU,GAAjB,UAAkB,KAAa;QAC7B,IAAM,KAAK,GAAW,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEM,8BAAK,GAAZ;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,KAAa,IAAK,aAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,EAAxB,CAAwB,CAAC,CAAC;IAC7E,CAAC;IAQD,iCAAQ,GAAR;QAAA,iBAKC;QAJC,UAAU,CAAC,cAAM,YAAI,CAAC,iBAAiB,GAAG,IAAI,EAA7B,CAA6B,EAAE,KAAK,CAAC,CAAC;QAEvD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,OAAO,IAAK,YAAI,CAAC,cAAc,GAAG,OAAO,EAA7B,CAA6B,CAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,cAAc,GAAG,IAAI,EAA1B,CAA0B,CAAC,CAAC;IAC/E,CAAC;IAEM,6CAAoB,GAA3B;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAI,IAAI,IAAI,EAAE,qCAAkC,CAAC,CAAC;IACtE,CAAC;IAhDD;QADC,oEAAK,EAAE;kCACO,KAAK;kDAAc;IAHvB,cAAc;QAL1B,wEAAS,CAAC;YACV,QAAQ,EAAE,EAAE;;SAEZ,CAAC;;OAEW,cAAc,CAoD1B;IAAD,qBAAC;CAAA;AApD0B;;;;;;;;;;;;;;;;;;;;;;;ACTc;AACM;AACF;AACU;AACJ;AAEI;AAGvD,IAAM,MAAM,GAAW,CAAC;QACpB,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACF,KAAK,EAAE,YAAY;YACnB,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;SACpG;QACD,SAAS,EAAE,wEAAc;KAC5B,CAAC,CAAC;AAWH;IAAA;IAA6B,CAAC;IAAjB,aAAa;QATzB,uEAAQ,CAAC;YACN,OAAO,EAAE;gBACL,mEAAW;gBACX,qEAAY;gBACZ,6EAAS,CAAC,OAAO,EAAE;gBACnB,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAChC;YACD,YAAY,EAAE,CAAC,wEAAc,CAAC;SACjC,CAAC;OACW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ","file":"alert.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Basic Alert</h3>\\n                <h6 class=\\\"card-subtitle\\\">This is basic alert</h6>\\n                <ngb-alert [dismissible]=\\\"false\\\">\\n\\t\\t\\t    <strong>Warning!</strong> Better check yourself, you're not looking too good.\\n\\t\\t\\t  </ngb-alert>\\n  \\t\\t\\t\\t\\t\\n            </div>\\n        </div>\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Closeable Alert</h3>\\n                <h6 class=\\\"card-subtitle\\\">This is closeable alert</h6>\\n                <p *ngFor=\\\"let alert of alerts\\\">\\n\\t\\t\\t\\t  <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"closeAlert(alert)\\\">{{ alert.message }}</ngb-alert>\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t\\t<p>\\n\\t\\t\\t\\t  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"reset()\\\">Reset</button>\\n\\t\\t\\t\\t</p>\\n  \\t\\t\\t\\t\\t\\n            </div>\\n        </div>\\n\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Self Closing  Alert</h3>\\n                <h6 class=\\\"card-subtitle\\\">Static self-closing alert that disappears after 20 seconds (refresh the page if it has already disappeared)</h6>\\n                <ngb-alert *ngIf=\\\"!staticAlertClosed\\\" (close)=\\\"staticAlertClosed = true\\\">Check out our awesome new features!</ngb-alert>\\n  \\t\\t\\t\\t<p>Show a self-closing success message that disappears after 5 seconds.</p>\\n  \\t\\t\\t\\t<ngb-alert *ngIf=\\\"successMessage\\\" type=\\\"success\\\" (close)=\\\"successMessage = null\\\">{{ successMessage }}</ngb-alert>\\t\\n  \\t\\t\\t\\t<p>\\n\\t\\t\\t\\t  <button class=\\\"btn btn-primary\\\" (click)=\\\"changeSuccessMessage()\\\">Change message</button>\\n\\t\\t\\t\\t</p>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/component/alert/alert.component.html\n// module id = ./src/app/pages/component/alert/alert.component.html\n// module chunks = alert.module","import { Input, Component, OnInit } from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\n\n@Component({\n\tselector: '',\n\ttemplateUrl: 'alert.component.html'\n})\n\nexport class NgbdAlertBasic implements OnInit{\n  // this is for the Closeable Alert\n  @Input()\n  public alerts: Array<IAlert> = [];\n\n  private backup: Array<IAlert>;\n  constructor() {\n    this.alerts.push({\n      id: 1,\n      type: 'success',\n      message: 'This is an success alert',\n    }, {\n      id: 2,\n      type: 'info',\n      message: 'This is an info alert',\n    }, {\n      id: 3,\n      type: 'warning',\n      message: 'This is a warning alert',\n    }, {\n      id: 4,\n      type: 'danger',\n      message: 'This is a danger alert',\n    });\n    this.backup = this.alerts.map((alert: IAlert) => Object.assign({}, alert));\n  }\n\n  public closeAlert(alert: IAlert) {\n    const index: number = this.alerts.indexOf(alert);\n    this.alerts.splice(index, 1);\n  }\n\n  public reset() {\n    this.alerts = this.backup.map((alert: IAlert) => Object.assign({}, alert));\n  }\n  // End the Closeable Alert\n  ///This is for the self closing alert\n  private _success = new Subject<string>();\n\n  staticAlertClosed = false;\n  successMessage: string;\n\n  ngOnInit(): void {\n    setTimeout(() => this.staticAlertClosed = true, 20000);\n\n    this._success.subscribe((message) => this.successMessage = message);\n    this._success.debounceTime(5000).subscribe(() => this.successMessage = null);\n  }\n\n  public changeSuccessMessage() {\n    this._success.next(`${new Date()} - Message successfully changed.`);\n  }\n}\n\n\n\nexport interface IAlert {\n  id: number;\n  type: string;\n  message: string;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/component/alert/alert.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgbdAlertBasic } from './alert.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n\nconst routes: Routes = [{\n    path: '',\n    data: {\n        title: 'Alert page',\n        urls: [{ title: 'Dashboard', url: '/' }, { title: 'Angular Component' }, { title: 'Alert page' }]\n    },\n    component: NgbdAlertBasic\n}];\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule,\n        NgbModule.forRoot(),\n        RouterModule.forChild(routes)\n    ],\n    declarations: [NgbdAlertBasic]\n})\nexport class NgAlertModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/component/alert/alert.module.ts"],"sourceRoot":"webpack:///"}