{"version":3,"sources":["./src/app/pages/component/typehead/typehead.component.html","./src/app/pages/component/typehead/typehead.component.ts","./src/app/pages/component/typehead/typehead.module.ts"],"names":[],"mappings":"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","file":"typehead.module.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Simple Typeahead</h3>\\n                <h6 class=\\\"card-subtitle\\\">A typeahead example that gets values from a static string</h6>\\n                <label for=\\\"typeahead-basic\\\">Search for a USA state:</label>\\n                <input id=\\\"typeahead-basic\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model\\\" [ngbTypeahead]=\\\"search\\\"/>\\n                <div class=\\\"m-t-10\\\">Model: {{ model | json }}</div>\\n  \\t\\t\\t</div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Formatted results</h3>\\n                <h6 class=\\\"card-subtitle\\\">A typeahead example that uses a formatter function for string results</h6>\\n                <label for=\\\"typeahead-format\\\">Search for a state:</label>\\n                <input id=\\\"typeahead-format\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model\\\" [ngbTypeahead]=\\\"search\\\" [resultFormatter]=\\\"formatter\\\" />\\n                <hr>\\n                <pre>Model: {{ model | json }}</pre>\\n  \\t\\t\\t</div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\"> \\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Wikipedia search</h3>\\n                <h6 class=\\\"card-subtitle\\\">A typeahead example that gets values from the <code>WikipediaService</code></h6>\\n                    <div class=\\\"form-group\\\" [class.has-danger]=\\\"searchFailed\\\">\\n                      <label for=\\\"typeahead-http\\\">Search for a wiki page:</label>\\n                      <input id=\\\"typeahead-http\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model2\\\" [ngbTypeahead]=\\\"search2\\\" placeholder=\\\"Wikipedia search\\\" />\\n                      <span *ngIf=\\\"searching\\\">searching...</span>\\n                      <div class=\\\"form-control-feedback\\\" *ngIf=\\\"searchFailed\\\">Sorry, suggestions could not be loaded.</div> \\n                    </div>\\n\\n                    <hr>\\n                    <pre>Model: {{ model2 | json }}</pre>\\n  \\t\\t\\t</div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <h3 class=\\\"card-title\\\">Template for results</h3>\\n                <h6 class=\\\"card-subtitle\\\">A typeahead example that uses custom template for results display and uses object as a model</h6>\\n                <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\n                  <img [src]=\\\"'https://upload.wikimedia.org/wikipedia/commons/thumb/' + r.flag\\\" width=\\\"16\\\">\\n                  {{ r.name}}\\n                </ng-template>\\n\\n                <label for=\\\"typeahead-template\\\">Search for a state:</label>\\n                <input id=\\\"typeahead-template\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model4\\\" [ngbTypeahead]=\\\"search3\\\" [resultTemplate]=\\\"rt\\\"\\n                  [inputFormatter]=\\\"formatter2\\\" />\\n                <hr>\\n                <pre>Model: {{ model4 | json }}</pre>\\n  \\t\\t\\t</div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/component/typehead/typehead.component.html\n// module id = ./src/app/pages/component/typehead/typehead.component.html\n// module chunks = typehead.module","import { Component, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Jsonp, URLSearchParams } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/switchMap';\n\n\nconst states = ['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas', 'California', 'Colorado',\n  'Connecticut', 'Delaware', 'District Of Columbia', 'Federated States Of Micronesia', 'Florida', 'Georgia',\n  'Guam', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine',\n  'Marshall Islands', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana',\n  'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',\n  'Northern Mariana Islands', 'Ohio', 'Oklahoma', 'Oregon', 'Palau', 'Pennsylvania', 'Puerto Rico', 'Rhode Island',\n  'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virgin Islands', 'Virginia',\n  'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n\nconst statesWithFlags = [\n  { 'name': 'Alabama', 'flag': '5/5c/Flag_of_Alabama.svg/45px-Flag_of_Alabama.svg.png' },\n  { 'name': 'Alaska', 'flag': 'e/e6/Flag_of_Alaska.svg/43px-Flag_of_Alaska.svg.png' },\n  { 'name': 'Arizona', 'flag': '9/9d/Flag_of_Arizona.svg/45px-Flag_of_Arizona.svg.png' },\n  { 'name': 'Arkansas', 'flag': '9/9d/Flag_of_Arkansas.svg/45px-Flag_of_Arkansas.svg.png' },\n  { 'name': 'California', 'flag': '0/01/Flag_of_California.svg/45px-Flag_of_California.svg.png' },\n  { 'name': 'Colorado', 'flag': '4/46/Flag_of_Colorado.svg/45px-Flag_of_Colorado.svg.png' },\n  { 'name': 'Connecticut', 'flag': '9/96/Flag_of_Connecticut.svg/39px-Flag_of_Connecticut.svg.png' },\n  { 'name': 'Delaware', 'flag': 'c/c6/Flag_of_Delaware.svg/45px-Flag_of_Delaware.svg.png' },\n  { 'name': 'Florida', 'flag': 'f/f7/Flag_of_Florida.svg/45px-Flag_of_Florida.svg.png' },\n  {\n    'name': 'Georgia',\n    'flag': '5/54/Flag_of_Georgia_%28U.S._state%29.svg/46px-Flag_of_Georgia_%28U.S._state%29.svg.png'\n  },\n  { 'name': 'Hawaii', 'flag': 'e/ef/Flag_of_Hawaii.svg/46px-Flag_of_Hawaii.svg.png' },\n  { 'name': 'Idaho', 'flag': 'a/a4/Flag_of_Idaho.svg/38px-Flag_of_Idaho.svg.png' },\n  { 'name': 'Illinois', 'flag': '0/01/Flag_of_Illinois.svg/46px-Flag_of_Illinois.svg.png' },\n  { 'name': 'Indiana', 'flag': 'a/ac/Flag_of_Indiana.svg/45px-Flag_of_Indiana.svg.png' },\n  { 'name': 'Iowa', 'flag': 'a/aa/Flag_of_Iowa.svg/44px-Flag_of_Iowa.svg.png' },\n  { 'name': 'Kansas', 'flag': 'd/da/Flag_of_Kansas.svg/46px-Flag_of_Kansas.svg.png' },\n  { 'name': 'Kentucky', 'flag': '8/8d/Flag_of_Kentucky.svg/46px-Flag_of_Kentucky.svg.png' },\n  { 'name': 'Louisiana', 'flag': 'e/e0/Flag_of_Louisiana.svg/46px-Flag_of_Louisiana.svg.png' },\n  { 'name': 'Maine', 'flag': '3/35/Flag_of_Maine.svg/45px-Flag_of_Maine.svg.png' },\n  { 'name': 'Maryland', 'flag': 'a/a0/Flag_of_Maryland.svg/45px-Flag_of_Maryland.svg.png' },\n  { 'name': 'Massachusetts', 'flag': 'f/f2/Flag_of_Massachusetts.svg/46px-Flag_of_Massachusetts.svg.png' },\n  { 'name': 'Michigan', 'flag': 'b/b5/Flag_of_Michigan.svg/45px-Flag_of_Michigan.svg.png' },\n  { 'name': 'Minnesota', 'flag': 'b/b9/Flag_of_Minnesota.svg/46px-Flag_of_Minnesota.svg.png' },\n  { 'name': 'Mississippi', 'flag': '4/42/Flag_of_Mississippi.svg/45px-Flag_of_Mississippi.svg.png' },\n  { 'name': 'Missouri', 'flag': '5/5a/Flag_of_Missouri.svg/46px-Flag_of_Missouri.svg.png' },\n  { 'name': 'Montana', 'flag': 'c/cb/Flag_of_Montana.svg/45px-Flag_of_Montana.svg.png' },\n  { 'name': 'Nebraska', 'flag': '4/4d/Flag_of_Nebraska.svg/46px-Flag_of_Nebraska.svg.png' },\n  { 'name': 'Nevada', 'flag': 'f/f1/Flag_of_Nevada.svg/45px-Flag_of_Nevada.svg.png' },\n  { 'name': 'New Hampshire', 'flag': '2/28/Flag_of_New_Hampshire.svg/45px-Flag_of_New_Hampshire.svg.png' },\n  { 'name': 'New Jersey', 'flag': '9/92/Flag_of_New_Jersey.svg/45px-Flag_of_New_Jersey.svg.png' },\n  { 'name': 'New Mexico', 'flag': 'c/c3/Flag_of_New_Mexico.svg/45px-Flag_of_New_Mexico.svg.png' },\n  { 'name': 'New York', 'flag': '1/1a/Flag_of_New_York.svg/46px-Flag_of_New_York.svg.png' },\n  { 'name': 'North Carolina', 'flag': 'b/bb/Flag_of_North_Carolina.svg/45px-Flag_of_North_Carolina.svg.png' },\n  { 'name': 'North Dakota', 'flag': 'e/ee/Flag_of_North_Dakota.svg/38px-Flag_of_North_Dakota.svg.png' },\n  { 'name': 'Ohio', 'flag': '4/4c/Flag_of_Ohio.svg/46px-Flag_of_Ohio.svg.png' },\n  { 'name': 'Oklahoma', 'flag': '6/6e/Flag_of_Oklahoma.svg/45px-Flag_of_Oklahoma.svg.png' },\n  { 'name': 'Oregon', 'flag': 'b/b9/Flag_of_Oregon.svg/46px-Flag_of_Oregon.svg.png' },\n  { 'name': 'Pennsylvania', 'flag': 'f/f7/Flag_of_Pennsylvania.svg/45px-Flag_of_Pennsylvania.svg.png' },\n  { 'name': 'Rhode Island', 'flag': 'f/f3/Flag_of_Rhode_Island.svg/32px-Flag_of_Rhode_Island.svg.png' },\n  { 'name': 'South Carolina', 'flag': '6/69/Flag_of_South_Carolina.svg/45px-Flag_of_South_Carolina.svg.png' },\n  { 'name': 'South Dakota', 'flag': '1/1a/Flag_of_South_Dakota.svg/46px-Flag_of_South_Dakota.svg.png' },\n  { 'name': 'Tennessee', 'flag': '9/9e/Flag_of_Tennessee.svg/46px-Flag_of_Tennessee.svg.png' },\n  { 'name': 'Texas', 'flag': 'f/f7/Flag_of_Texas.svg/45px-Flag_of_Texas.svg.png' },\n  { 'name': 'Utah', 'flag': 'f/f6/Flag_of_Utah.svg/45px-Flag_of_Utah.svg.png' },\n  { 'name': 'Vermont', 'flag': '4/49/Flag_of_Vermont.svg/46px-Flag_of_Vermont.svg.png' },\n  { 'name': 'Virginia', 'flag': '4/47/Flag_of_Virginia.svg/44px-Flag_of_Virginia.svg.png' },\n  { 'name': 'Washington', 'flag': '5/54/Flag_of_Washington.svg/46px-Flag_of_Washington.svg.png' },\n  { 'name': 'West Virginia', 'flag': '2/22/Flag_of_West_Virginia.svg/46px-Flag_of_West_Virginia.svg.png' },\n  { 'name': 'Wisconsin', 'flag': '2/22/Flag_of_Wisconsin.svg/45px-Flag_of_Wisconsin.svg.png' },\n  { 'name': 'Wyoming', 'flag': 'b/bc/Flag_of_Wyoming.svg/43px-Flag_of_Wyoming.svg.png' }\n];\n\n@Injectable()\nexport class WikipediaService {\n  constructor(private _jsonp: Jsonp) { }\n\n  search(term: string) {\n    if (term === '') {\n      return Observable.of([]);\n    }\n\n    let wikiUrl = 'https://en.wikipedia.org/w/api.php';\n    let params = new URLSearchParams();\n    params.set('search', term);\n    params.set('action', 'opensearch');\n    params.set('format', 'json');\n    params.set('callback', 'JSONP_CALLBACK');\n\n    return this._jsonp\n      .get(wikiUrl, { search: params })\n      .map(response => <string[]>response.json()[1]);\n  }\n}\n\n@Component({\n  selector: 'ngbd-pagination',\n  templateUrl: './typehead.component.html',\n  providers: [WikipediaService]\n})\n\nexport class NgbdtypeheadBasic {\n  public model: any;\n  model2: any;\n  searching = false;\n  searchFailed = false;\n\n  constructor(private _service: WikipediaService) { }\n\n  formatter = (result: string) => result.toUpperCase();\n\n  search = (text$: Observable<string>) =>\n    text$\n      .debounceTime(200)\n      .distinctUntilChanged()\n      .map(term => term.length < 2 ? []\n        : states.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10));\n\n  search2 = (text2$: Observable<string>) =>\n    text2$\n      .debounceTime(300)\n      .distinctUntilChanged()\n      .do(() => this.searching = true)\n      .switchMap(term =>\n        this._service.search(term)\n          .do(() => this.searchFailed = false)\n          .catch(() => {\n            this.searchFailed = true;\n            return Observable.of([]);\n          }))\n      .do(() => this.searching = false);\n\n  // This is with the flag\n  public model4: any;\n\n  search3 = (text3$: Observable<string>) =>\n    text3$\n      .debounceTime(200)\n      .map(term => term === '' ? []\n        : statesWithFlags.filter(v => v.name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10));\n\n  formatter2 = (x: { name: string }) => x.name;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/component/typehead/typehead.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgbdtypeheadBasic } from './typehead.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpModule, JsonpModule } from '@angular/http';\nconst routes: Routes = [{\n\tpath: '',\n\tdata: {\n      title: 'Pagination page',\n      urls: [{title: 'Dashboard', url: '/'},{title: 'Angular Component'},{title: 'Pagination page'}]\n    },\n\tcomponent: NgbdtypeheadBasic\n}];\n\n@NgModule({\n\timports: [\n    \tFormsModule,\n    \tCommonModule,\n      HttpModule,\n      JsonpModule,\n      NgbModule.forRoot(),\n    \tRouterModule.forChild(routes)\n    ],\n\tdeclarations: [NgbdtypeheadBasic]\n})\nexport class TypeheadModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/component/typehead/typehead.module.ts"],"sourceRoot":"webpack:///"}